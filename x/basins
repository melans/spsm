#!/bin/csh
#SBATCH -J basins			# job name
#SBATCH -o basins.%j		# output and error file name (%j expands to jobID)
#SBATCH -n 16				# total number of mpi tasks requested
#SBATCH -p normal			# queue (partition) -- normal, development, etc.
#SBATCH -t 0:30:00			# run time (hh:mm:ss) - 1.5 hours
#SBATCH --mail-user=anssary@gmail.com
#SBATCH --mail-type=ALL

########	set the variables

#echo "TST";
#exit

set M={"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"}
set msg="printf %-80s "
set don="printf \e[1;32m%-20s\e[m\n ........DONE"

printf %-80s Initializing...

#	echo $#argv;exit
	if ($1 == "x") then
		goto CPTx
	endif
	if ($1 == "R") then
		goto R
	endif
	if ($#argv == 2) then
		goto CPTx_
	endif
	if ($1 == "CPTs") then
		goto CPTs
	endif
#$don;$msg "Initializing..."
#set dir="data_150711_0451";cd $dir;goto cor
set d="1.4"
set d1=".5"
set basins=`awk '1' $1`
set basins=`echo $basins|sed 's/ /_/g'|sed 's/_#\+_/#/g'|sed 's/"_/";set_/g'|sed 's/#/ /g'`
@ xBasins = ${#basins}
nextBasin:
set v=`echo "set "$basins[$xBasins]|sed 's/set_/set /g';`
eval $v
set lat1 = `echo $lat - $d1|bc`
set lat2 = `echo $lat + $d1|bc`
set lon1 = `echo $lon - $d|bc`
set lon2 = `echo $lon + $d|bc`

#	les Frio_river_nr_Derby/tmp/_TEMP.grd;les Llano_river_at_Llano/tmp/_TEMP.grd;les Nueces_Rv_nr_Tilden/tmp/_TEMP.grd
#echo $lat1exit
set dir=$name
goto startBasin
exit
#	function mk{
#	test
	
#	}mk
####################################################################################################################################################
startBasin:
#echo $name;

mkdir -p $dir/tmp $dir/data $dir/CPT $dir/CPT.o $dir/Results;
cd $dir
#goto CPT

########	Download the data files
$don;$msg "Basin		$dir"
$don;$msg "	Downloading the stramflow data"
#wget "http://waterdata.usgs.gov/tx/nwis/monthly?referred_module=sw&site_no=08194500&agency_cd=USGS&por_08194500_2=1792,00060,2,1956-12,2014-05&partial_periods=on&format=rdb"  --quiet -O _FLOW > /dev/null
#wget "http://waterdata.usgs.gov/tx/nwis/monthly?referred_module=sw&site_no="$stn"&agency_cd=USGS&por_"$stn"_2=1792,00060,2,1956-12,2014-05&partial_periods=on&format=rdb"  --quiet -O tmp/_FLOW > /dev/null

#echo "http://waterdata.usgs.gov/tx/nwis/monthly?site_no="$stn"&agency_cd=USGS&por_"$stn"_2="$usgs"&partial_periods=on&referred_module=sw&format=rdb"
wget "http://waterdata.usgs.gov/tx/nwis/monthly?site_no="$stn"&agency_cd=USGS&por_"$stn"_2="$usgs"&partial_periods=on&referred_module=sw&format=rdb" --quiet -O tmp/_FLOW > /dev/null


awk '{if($2==$2*1 && $5>1955 && $5<2013 && $6==12)print $5+1,$7*1>"'tmp'/Y.00"}' tmp/_FLOW
awk '{m=$6>9?$6:"0"$6;if($2==$2*1 && $5>1956 && $5<2014)print $5,$7*1>"'tmp'/Y."m}' tmp/_FLOW
if($stn == "08194500") then
	sed -i '/2008 /a 2009 -999' tmp/Y.09
endif

$don;$msg "	Calculating ln(streamflow)"
#awk '{y=FILENAME;gsub(/Y./,"Y_ln.",y);i=$2>0?log($2):-999;print $1,i>y}' tmp/Y.*
awk '{y=FILENAME;gsub(/Y./,"Y_ln.",y);print $1,($2>0?log($2):log(.001))>y}' tmp/Y.*

foreach m (`seq -w 00 12`)
	printf "STN,$m\nLAT,$lat\nLON,$lon\n"|\
	tee data/Y.$m data/Y_ln.$m > /dev/null
	cat tmp/Y.$m>>data/Y.$m
	cat tmp/Y_ln.$m>>data/Y_ln.$m
end

#$don;$msg "Removing residuals"
#rm tmp/_*;exit

PT:
########	Download PCPT & TMP (L: 0-6)
$don;$msg "	Downloading PCPT & TEMP data"
#echo "http://iridl.ldeo.columbia.edu/SOURCES/.IRI/.FD/.ECHAM4p5/.Forecast/.ca_sst/.ensemble24/.MONTHLY/.prec/Y/$lat2/$lat1/RANGEEDGES/X/$lon2/$lon1/RANGEEDGES/%5BM%5Daverage/gridtable.tsv" --quiet -O tmp/_PCPT.grd
wget "http://iridl.ldeo.columbia.edu/SOURCES/.IRI/.FD/.ECHAM4p5/.Forecast/.ca_sst/.ensemble24/.MONTHLY/.prec/Y/$lat2/$lat1/RANGEEDGES/X/$lon2/$lon1/RANGEEDGES/%5BM%5Daverage/gridtable.tsv" --quiet -O tmp/_PCPT.grd > /dev/null
#echo "http://iridl.ldeo.columbia.edu/SOURCES/.IRI/.FD/.ECHAM4p5/.Forecast/.ca_sst/.ensemble24/.MONTHLY/.st/Y/$lat2/$lat1/RANGEEDGES/X/$lon2/$lon1/RANGEEDGES/%5BM%5Daverage/gridtable.tsv" --quiet -O tmp/_TEMP.grd
wget "http://iridl.ldeo.columbia.edu/SOURCES/.IRI/.FD/.ECHAM4p5/.Forecast/.ca_sst/.ensemble24/.MONTHLY/.st/Y/$lat2/$lat1/RANGEEDGES/X/$lon2/$lon1/RANGEEDGES/%5BM%5Daverage/gridtable.tsv" --quiet -O tmp/_TEMP.grd > /dev/null


set lat1=`awk '{if(NR==5)print $3}' tmp/_PCPT.grd`
set lat2=`awk '{if(NR==2)print $3}' tmp/_PCPT.grd`
set lon1=`awk '{if(NR==5)print $2}' tmp/_PCPT.grd`
set lon2=`awk '{if(NR==2)print $2}' tmp/_PCPT.grd`


#goto endline

$don;$msg "	Creating the grids files"
awk '{t=mktime("1960 "($5+1)" 01 0 0 0");y=strftime("%Y",t);m=strftime("%m",t);if($1==$1*1 && y>1956 && y<2014)print y,$1*1>FILENAME"."$3"_"$2"."m-$4+.5"."$4-.5}' tmp/_*.grd
#awk '{t=mktime("1960 "($5+1)" 01 0 0 0");y=strftime("%Y",t);m=strftime("%m",t);if($1==$1*1)print y,$1>FILENAME"."$3"_"$2"."m"."$4-.5}' $tmp/_*.grd


X:
########	Create X, ln(X) (L: 0-6)
$don;$msg "	Creating X,ln(X) - 0 to 6  months ahead"
foreach m (`seq -w 01 12`)
	foreach l (`seq 0 6`)
		@ m0 = $m - 1
		if($m0<10) set m0 = "0"$m0
		@ f = $m - $l
		printf 	\
"STN,pcpt_1,pcpt_2,pcpt_3,pcpt_4,temp_1,temp_2,temp_3,temp_4,tldn\
LAT,$lat1,$lat1,$lat2,$lat2,$lat1,$lat1,$lat2,$lat2,$lat\
LON,$lon1,$lon2,$lon1,$lon2,$lon1,$lon2,$lon1,$lon2,$lon\n" |\
		tee data/X.$m.$l data/X_ln.$m.$l > /dev/null

		pr -mts"	" tmp/_P*.$f.$l tmp/_T*.$f.$l tmp/Y.$m0|awk '{printf($1" ");for(l=2;l<20;l+=2)printf($l" ");print ""}'>>data/X.$m.$l
		pr -mts"	" tmp/_P*.$f.$l tmp/_T*.$f.$l tmp/Y_ln.$m0|awk '{printf($1" ");for(l=2;l<20;l+=2)printf($l" ");print ""}'>>data/X_ln.$m.$l
	end
end
sed -i 's/,$//' data/X*

foreach m (`seq -w 00 12`)
	printf "STN,$m\nLAT,$lat\nLON,$lon\n"|\
	tee data/Y.$m data/Y_ln.$m > /dev/null
	cat tmp/Y.$m>>data/Y.$m
	cat tmp/Y_ln.$m>>data/Y_ln.$m
end
#mv Y* ../data/.

#$don;exit	############################################################################################


CPT:
########	Initializing CPT
$don;$msg "	Preparing CPT files"
foreach m (`seq -w 01 12`)
	foreach l (`seq 0 6`)
		@ m0 = $m - 1
		if($m0<10) set m0 = "0"$m0

		awk '/\tCPT START/,/\tCPT END/' ../$0|\
		sed '1d'|sed '$d'|awk '{print $1}'|\
		sed 's/X/..\/'$dir'\/data\/X.'$m'.'$l'/g'|\
		sed 's/xLimits/'$xLimits'/g'|\
		sed 's/Y/..\/'$dir'\/data\/Y.'$m0'/g'|\
		sed 's/yLimits/'$yLimits'/g'|sed 's/,/\n/g'|\
		sed 's/CV/..\/'$dir'\/Results\/CV.'$m'.'$l'/g'|\
		sed 's/RP/..\/'$dir'\/Results\/RP.'$m'.'$l'/g' > CPT/$m.$l
		
		awk '/\tCPT START/,/\tCPT END/' ../$0|\
		sed '1d'|sed '$d'|awk '{print $1}'|sed '/542/d'|\
		sed 's/X/..\/'$dir'\/data\/X_ln.'$m'.'$l'/g'|\
		sed 's/xLimits/'$xLimits'/g'|\
		sed 's/Y/..\/'$dir'\/data\/Y_ln.'$m0'/g'|\
		sed 's/yLimits/'$yLimits'/g'|sed 's/,/\n/g'|\
		sed 's/CV/..\/'$dir'\/Results\/CV_ln.'$m'.'$l'/g'|\
		sed 's/RP/..\/'$dir'\/Results\/RP_ln.'$m'.'$l'/g' > CPT/ln.$m.$l
		
	end
end

endline:
cd ..
@ xBasins = $xBasins - 1
if ($xBasins) goto nextBasin
$don;


#less */tmp/_TEMP.grd
#less Frio_river_nr_Derby/tmp/_TEMP.grd;less Llano_river_at_Llano/tmp/_TEMP.grd;less Nueces_Rv_nr_Tilden/tmp/_TEMP.grd

#echo "less Frio_river_nr_Derby/tmp/_TEMP.grd"
#echo "less Llano_river_at_Llano/tmp/_TEMP.grd"
#echo "less Nueces_Rv_nr_Tilden/tmp/_TEMP.grd"
exit



CPTx:

#"Frio_river_nr_Derby Llano_river_at_Llano Nueces_Rv_nr_Tilden"

foreach dir (`ls -d *_*/`)
	foreach m (`seq -w 01 12`)
		sbatch $0 $dir $m
	end
end

exit

CPTx_:
cd 11.03
foreach l (`seq 0 6`)
	CPT.x < ../$1"CPT/$2.$l" > ../$1"CPT.o/$2.$l"
	CPT.x < ../$1"CPT/ln.$2.$l" > ../$1"CPT.o/ln.$2.$l"
end

cd ..

exit
#$don;$msg "Initializing CPT"
#set CPTs=`ls CPT|awk '{print "CPT.x < ../'$dir'/CPT/"$1" > ../'$dir'/CPT.o/"$1".out 2 > ../'$dir'/CPT.o/"$1".err & "}'|sed 's/\&/&\n/g'`
#cd ../11.03
#echo $CPTs

CPTs:
cd 11.03

foreach dir (`ls -d ../*_*/`)
	foreach m (`seq -w 01 12`)
#		set CPTm=""
#		set CPTl=""
		foreach l (`seq 0 6`)
			CPT.x < $dir"CPT/$m.$l" > $dir"CPT.o/$m.$l" &
			CPT.x < $dir"CPT/ln.$m.$l" > $dir"CPT.o/ln.$m.$l" &
#			set CPTm="$CPTm CPT.x < $dir"CPT/$m.$l" > $dir"CPT.o/$m.$l" & "
#			set CPTl="$CPTl CPT.x < $dir"CPT/ln.$m.$l" > $dir"CPT.o/ln.$m.$l" & "
		end
#		echo $CPTm
#		eval $CPTm
#		echo $CPTl
#		eval $CPTl
	end
end

cd ..

exit

#cd ../11.03
#foreach f (`ls ../$dir/CPT`)
#	CPT.x < ../$dir/CPT/$f > ../$dir/CPT.o/$f.out 2 > ../$dir/CPT.o/$f.err &
#	echo "CPT.x < ../$dir/CPT/$f &"
#	CPT.x < ../$dir/CPT/$f &
#end


#$don;exit	###########################################################################################

########	Calculations (R)
R:
cor:
msss:

$don;$msg "Loading R module"
module load R

foreach dir (`ls -d *_*/`)
	set dir=`echo $dir|sed 's/\///g'`
	echo $dir|tee $dir/$dir.csv > /dev/null
	echo "m,l,cor rp,cor cv,msss rp,msss cv,cor exp rp,cor exp cv,msss exp rp,msss exp cv"|tee -a $dir/$dir.csv > /dev/null
#	set strt=`awk '{if(NR==7)print $1}' $dir/Results/RP.01.0.txt`;
	set strt="1985"
	foreach m (`seq -w 01 12`)
		echo|tee -a $dir/$dir.csv
		$don;$msg "Calculating CORR and MSSS for $M[$m]"
		foreach l (`seq 0 6`)
			$don;$msg "	... $l months ahead";
			set y_trin=`awk -vORS=, '{if(NR>3 && $1<'$strt')print $2}' $dir/data/Y.$m|sed 's/,$//'`;
			set y_obs=`awk -vORS=, '{if(NR>3 && $1>='$strt')print $2}' $dir/data/Y.$m|sed 's/,$//'`;
			set y_rp=`awk -vORS=, '{if(NR>6 && $1>='$strt')print $2}' $dir/Results/RP.$m.$l.txt|sed 's/,$//'`;
			set y_rp_ln=`awk -vORS=, '{if(NR>6 && $1>='$strt')print ($2>0?exp($2):exp(.001))}' $dir/Results/RP_ln.$m.$l.txt|sed 's/,$//'`;
#			set y_rp_ln=`awk -vORS=, '{if(NR>6 && $1>='$strt')print exp($2)}' $dir/Results/RP_ln.$m.$l.txt|sed 's/,$//'`;
			set y_cv=`awk -vORS=, '{if(NR>6 && $1>='$strt')print $2}' $dir/Results/CV.$m.$l.txt|sed 's/,$//'`;
			set y_cv_ln=`awk -vORS=, '{if(NR>6 && $1>='$strt')print ($2>0?exp($2):exp(.001))}' $dir/Results/CV_ln.$m.$l.txt|sed 's/,$//'`;
#			set y_cv_ln=`awk -vORS=, '{if(NR>6 && $1>='$strt')print exp($2)}' $dir/Results/CV_ln.$m.$l.txt|sed 's/,$//'`;
			

			echo -n "$m,$l"|tee -a $dir/$dir.csv > /dev/null

			Rscript -e 'cat(",",cor(c('$y_obs'),c('$y_rp'),use="pairwise.complete.obs",method="spearman"))'|sed 's/\[1\] //g'>>$dir/$dir.csv
			Rscript -e 'cat(",",cor(c('$y_obs'),c('$y_cv'),use="pairwise.complete.obs",method="spearman"))'|sed 's/\[1\] //g'>>$dir/$dir.csv
			Rscript -e 'clim=mean(c('$y_trin'));y=c('$y_obs');z=c('$y_rp');cat(",",1-sum((z-y)^2)/sum((y-clim)^2))'>>$dir/$dir.csv
			Rscript -e 'clim=mean(c('$y_trin'));y=c('$y_obs');z=c('$y_cv');cat(",",1-sum((z-y)^2)/sum((y-clim)^2))'>>$dir/$dir.csv

			Rscript -e 'cat(",",cor(c('$y_obs'),c('$y_rp_ln'),use="pairwise.complete.obs",method="spearman"))'|sed 's/\[1\] //g'>>$dir/$dir.csv
			Rscript -e 'cat(",",cor(c('$y_obs'),c('$y_cv_ln'),use="pairwise.complete.obs",method="spearman"))'|sed 's/\[1\] //g'>>$dir/$dir.csv
			Rscript -e 'clim=mean(c('$y_trin'));y=c('$y_obs');z=c('$y_rp_ln');cat(",",1-sum((z-y)^2)/sum((y-clim)^2))'>>$dir/$dir.csv
			Rscript -e 'clim=mean(c('$y_trin'));y=c('$y_obs');z=c('$y_cv_ln');cat(",",1-sum((z-y)^2)/sum((y-clim)^2))'>>$dir/$dir.csv

			echo>>$dir/$dir.csv
		end
	end

	########	Email the results
	mail:
	mailx -s "$dir" -a $dir/$dir.csv -- anssary@gmail.com<"."
end

$don;exit
####################################################################################################################
#	CPT START
2	2.  Principal Components Regression (PCR)
1	X Input File: ../data/X.mm.l
X
xLimits
1	Minimum number of X modes: 1
4	Maximum number of X modes: 4
2	Y Input File: ../data/Y.mm (00-17)
Y
yLimits
552	552.  Forecast settings
95	Confidence level (%): 95
50	Number of ensemble members: 50
1	1. Cross-validated error variance
1	1. Odds relative to climatology
4	Number of decimal places (maximum is 8): 4
9	9.  Number Number of forecasts
30	Number of forecasts: 30
6	6.  Forecast period settings
1985	First year from which to forecast: 1985
8	8.  Length of cross-validation window
3	Length of cross-validation period (must be odd): 3
311	311.  Perform cross-validated analysis
111	111.  Data output
4	4. Cross-Validated Predictions
CV	cv.mm.l	%	CV_ln.mm.l
0
321	321.  Reset
542	542.  Zero-bound (turn on)
312	312.  Perform retroactive analysis
28	Length of initial training period (suggested value 29):
1	Training period update interval: 1
111	111.  Data output
5	5. Retroactive Predictions
RP	RP.mm.l	& RP_ln.mm.l
0
0
#	CPT END
####################################################################################################################



####################################################################################################
#	get extreme pcpt events (no of days with pcpt 1,2,5 inches / day / yr) in major cities for 1950 - now
#	NCDC , 1 stn / site
#	brownsville, san antonio, cotulla, weslaco, corpus
#	in xls	|		yr | city 1 | city 2 | 

#	wget http://www1.ncdc.noaa.gov/pub/orders/cdo/555381.csv
#	awk 'FS=","{if(NR>1)print substr($3,0,4),substr($3,5,2),substr($3,7,2),$24,$24*0.00393701>substr($1,13)".csv"}' 555381.csv 
#	awk '$5>=1{arr[$1]++}END{for (a in arr) print a, arr[a]}' 12947.csv|les


